{
  "projectId": "7448bc59-7895-46e5-86a8-ed63ca3943a7",
  "userId": "2luDlbgjvhO32uRKNns0OwSKemA3",
  "version": "1.0.0",
  "generatedAt": "2025-09-19T05:15:38.493Z",
  "components": {
    "phoenix-1758258938465": {
      "phoenixId": "phoenix-1758258938465",
      "componentName": "CompareBreeds",
      "filePath": "src/app/breeds/compare/page.tsx",
      "lineNumber": 21,
      "columnNumber": 15,
      "sourceCode": "export default function CompareBreeds() {\n  const searchParams = useSearchParams();\n  const [selectedBreeds, setSelectedBreeds] = useState<BreedInfo[]>([]);\n  const [availableBreeds, setAvailableBreeds] = useState<BreedInfo[]>([]);\n\n  useEffect(() => {\n    const breedIds = searchParams.get('breeds')?.split(',') || [];\n    const breeds = breedIds\n      .map(id => cowBreeds.find(breed => breed.id === id))\n      .filter(Boolean) as BreedInfo[];\n\n    setSelectedBreeds(breeds);\n    setAvailableBreeds(cowBreeds);\n  }, [searchParams]);\n\n  const addBreed = (breedId: string) => {\n    const breed = cowBreeds.find(b => b.id === breedId);\n    if (breed && selectedBreeds.length < 4 && !selectedBreeds.find(b => b.id === breed.id)) {\n      setSelectedBreeds([...selectedBreeds, breed]);\n    }\n  };\n\n  const removeBreed = (breedId: string) => {\n    setSelectedBreeds(selectedBreeds.filter(breed => breed.id !== breedId));\n  };\n\n  const comparisonRows = [\n    {\n      label: 'Origin',\n      key: 'origin' as keyof BreedInfo,\n      icon: <MapPin className=\"w-4 h-4\" />,\n      type: 'text'\n    },\n    {\n      label: 'Primary Use',\n      key: 'primaryUse' as keyof BreedInfo,\n      icon: <Heart className=\"w-4 h-4\" />,\n      type: 'badge'\n    },\n    {\n      label: 'Average Weight (Cow)',\n      key: 'avgWeight' as keyof BreedInfo,\n      icon: <Scale className=\"w-4 h-4\" />,\n      type: 'weight'\n    },\n    {\n      label: 'Average Height',\n      key: 'avgHeight' as keyof BreedInfo,\n      icon: <Scale className=\"w-4 h-4\" />,\n      type: 'text'\n    },\n    {\n      label: 'Milk Production',\n      key: 'milkProduction' as keyof BreedInfo,\n      icon: <Scale className=\"w-4 h-4\" />,\n      type: 'text'\n    },\n    {\n      label: 'Temperament',\n      key: 'temperament' as keyof BreedInfo,\n      icon: <Heart className=\"w-4 h-4\" />,\n      type: 'text'\n    },\n    {\n      label: 'Lifespan',\n      key: 'lifespan' as keyof BreedInfo,\n      icon: <Timer className=\"w-4 h-4\" />,\n      type: 'text'\n    },\n    {\n      label: 'Horn Type',\n      key: 'hornType' as keyof BreedInfo,\n      icon: <Scale className=\"w-4 h-4\" />,\n      type: 'text'\n    }\n  ];\n\n  const renderComparisonValue = (breed: BreedInfo, row: typeof comparisonRows[0]) => {\n    const value = breed[row.key];\n\n    switch (row.type) {\n      case 'badge':\n        const colors: Record<string, string> = {\n          'Dairy': 'bg-blue-100 text-blue-800',\n          'Beef': 'bg-red-100 text-red-800',\n          'Dual-Purpose': 'bg-green-100 text-green-800'\n        };\n        return (\n          <Badge className={colors[value as string] || 'bg-gray-100 text-gray-800'}>\n            {value as string}\n          </Badge>\n        );\n      case 'weight':\n        return (breed.avgWeight as any)?.cow || 'N/A';\n      case 'text':\n        return value as string || 'N/A';\n      default:\n        return value as string || 'N/A';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-white to-amber-50\">\n      {/* Header */}\n      <section className=\"py-12 bg-gradient-to-r from-green-600 to-green-700\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"flex items-center gap-4 mb-6\">\n            <Button variant=\"outline\" size=\"sm\" asChild className=\"bg-white/10 border-white/20 text-white hover:bg-white hover:text-green-700\">\n              <Link href=\"/breeds\">\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back to Breeds\n              </Link>\n            </Button>\n          </div>\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-white mb-4\">\n            Compare Cattle Breeds\n          </h1>\n          <p className=\"text-xl text-green-100 max-w-3xl\">\n            Compare different cattle breeds side by side to find the perfect match for your needs.\n            Select up to 4 breeds to see detailed comparisons.\n          </p>\n        </div>\n      </section>\n\n      {/* Breed Selection */}\n      <section className=\"py-8 bg-white border-b\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"flex flex-col lg:flex-row gap-6 items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Selected Breeds ({selectedBreeds.length}/4)\n              </h2>\n              <p className=\"text-gray-600\">\n                Choose breeds to compare their characteristics and specifications\n              </p>\n            </div>\n\n            {selectedBreeds.length < 4 && (\n              <div className=\"flex items-center gap-4\">\n                <Select onValueChange={addBreed}>\n                  <SelectTrigger className=\"w-64\">\n                    <SelectValue placeholder=\"Add a breed to compare\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {availableBreeds\n                      .filter(breed => !selectedBreeds.find(s => s.id === breed.id))\n                      .map(breed => (\n                        <SelectItem key={breed.id} value={breed.id}>\n                          {breed.name} - {breed.origin}\n                        </SelectItem>\n                      ))\n                    }\n                  </SelectContent>\n                </Select>\n                <Button size=\"icon\" variant=\"outline\">\n                  <Plus className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            )}\n          </div>\n\n          {/* Selected Breeds Preview */}\n          {selectedBreeds.length > 0 && (\n            <div className=\"flex flex-wrap gap-3 mt-6\">\n              {selectedBreeds.map(breed => (\n                <div key={breed.id} className=\"flex items-center gap-2 bg-green-50 text-green-700 px-3 py-2 rounded-full\">\n                  <span className=\"font-medium\">{breed.name}</span>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-5 w-5 text-green-600 hover:text-green-800\"\n                    onClick={() => removeBreed(breed.id)}\n                  >\n                    <X className=\"w-3 h-3\" />\n                  </Button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Comparison Results */}\n      {selectedBreeds.length === 0 ? (\n        <section className=\"py-20\">\n          <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n            <div className=\"text-6xl mb-6\">üêÑ</div>\n            <h3 className=\"text-2xl font-semibold text-gray-900 mb-4\">\n              No breeds selected for comparison\n            </h3>\n            <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">\n              Select at least 2 breeds from the dropdown above or go back to the breeds page to choose breeds to compare.\n            </p>\n            <div className=\"flex gap-4 justify-center\">\n              <Button asChild>\n                <Link href=\"/breeds\">Browse Breeds</Link>\n              </Button>\n            </div>\n          </div>\n        </section>\n      ) : (\n        <section className=\"py-12\">\n          <div className=\"container mx-auto px-4 lg:px-8\">\n            {/* Images Section */}\n            <div className=\"mb-12\">\n              <div className={`grid gap-6 ${\n                selectedBreeds.length === 1 ? 'grid-cols-1 max-w-md mx-auto' :\n                selectedBreeds.length === 2 ? 'grid-cols-1 md:grid-cols-2' :\n                selectedBreeds.length === 3 ? 'grid-cols-1 md:grid-cols-3' :\n                'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'\n              }`}>\n                {selectedBreeds.map(breed => (\n                  <Card key={breed.id} className=\"cow-card overflow-hidden\">\n                    <div className=\"relative aspect-[4/3]\">\n                      <Image\n                        src={breed.image}\n                        alt={breed.name}\n                        fill\n                        className=\"object-cover\"\n                      />\n                      <Button\n                        variant=\"outline\"\n                        size=\"icon\"\n                        className=\"absolute top-3 right-3 bg-white/90 hover:bg-white\"\n                        onClick={() => removeBreed(breed.id)}\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                    <CardContent className=\"p-6 text-center\">\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{breed.name}</h3>\n                      <p className=\"text-gray-600 text-sm mb-3\">{breed.origin}</p>\n                      <Badge\n                        className={\n                          breed.primaryUse === 'Dairy' ? 'bg-blue-100 text-blue-800' :\n                          breed.primaryUse === 'Beef' ? 'bg-red-100 text-red-800' :\n                          'bg-green-100 text-green-800'\n                        }\n                      >\n                        {breed.primaryUse}\n                      </Badge>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Comparison Table */}\n            {selectedBreeds.length > 1 && (\n              <Card className=\"cow-card\">\n                <CardHeader>\n                  <CardTitle className=\"text-2xl text-center\">\n                    Detailed Comparison\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"border-b\">\n                          <th className=\"text-left p-4 font-semibold text-gray-900\">\n                            Characteristic\n                          </th>\n                          {selectedBreeds.map(breed => (\n                            <th key={breed.id} className=\"text-center p-4 font-semibold text-gray-900 min-w-[200px]\">\n                              {breed.name}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {comparisonRows.map((row, index) => (\n                          <tr key={row.label} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                            <td className=\"p-4\">\n                              <div className=\"flex items-center gap-2 font-medium text-gray-900\">\n                                {row.icon}\n                                {row.label}\n                              </div>\n                            </td>\n                            {selectedBreeds.map(breed => (\n                              <td key={breed.id} className=\"p-4 text-center\">\n                                {renderComparisonValue(breed, row)}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Characteristics Comparison */}\n            {selectedBreeds.length > 1 && (\n              <div className=\"mt-12 grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                <Card className=\"cow-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Heart className=\"w-5 h-5\" />\n                      Key Characteristics\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-6\">\n                      {selectedBreeds.map(breed => (\n                        <div key={breed.id}>\n                          <h4 className=\"font-semibold text-gray-900 mb-3\">{breed.name}</h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {breed.characteristics.map((char, index) => (\n                              <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                                {char}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"cow-card\">\n                  <CardHeader>\n                    <CardTitle>Colors</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-6\">\n                      {selectedBreeds.map(breed => (\n                        <div key={breed.id}>\n                          <h4 className=\"font-semibold text-gray-900 mb-3\">{breed.name}</h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {breed.colors.map((color, index) => (\n                              <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                                {color}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n\n            {/* Fun Facts */}\n            {selectedBreeds.length > 0 && (\n              <div className=\"mt-12\">\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">\n                  Fun Facts About Your Selected Breeds\n                </h3>\n                <div className={`grid gap-8 ${\n                  selectedBreeds.length === 1 ? 'grid-cols-1' :\n                  selectedBreeds.length === 2 ? 'grid-cols-1 lg:grid-cols-2' :\n                  'grid-cols-1 lg:grid-cols-2 xl:grid-cols-3'\n                }`}>\n                  {selectedBreeds.map(breed => (\n                    <Card key={breed.id} className=\"cow-card\">\n                      <CardHeader>\n                        <CardTitle className=\"text-lg\">{breed.name} Fun Facts</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <ul className=\"space-y-3\">\n                          {breed.funFacts.map((fact, index) => (\n                            <li key={index} className=\"text-sm text-gray-700 flex items-start gap-2\">\n                              <span className=\"text-green-600 font-bold\">‚Ä¢</span>\n                              {fact}\n                            </li>\n                          ))}\n                        </ul>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management",
        "side-effects",
        "lifecycle-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useSearchParams",
          "useState",
          "useState",
          "useEffect"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1758258938466": {
      "phoenixId": "phoenix-1758258938466",
      "componentName": "BreedsPage",
      "filePath": "src/app/breeds/page.tsx",
      "lineNumber": 20,
      "columnNumber": 15,
      "sourceCode": "export default function BreedsPage() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [sortBy, setSortBy] = useState('name');\n  const [selectedBreeds, setSelectedBreeds] = useState<BreedInfo[]>([]);\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Filter and sort breeds\n  const filteredAndSortedBreeds = useMemo(() => {\n    let filtered = cowBreeds;\n\n    // Filter by category\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(breed =>\n        breed.primaryUse.toLowerCase() === selectedCategory\n      );\n    }\n\n    // Filter by search query\n    if (searchQuery.trim()) {\n      filtered = filtered.filter(breed =>\n        breed.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        breed.origin.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        breed.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        breed.characteristics.some(char =>\n          char.toLowerCase().includes(searchQuery.toLowerCase())\n        )\n      );\n    }\n\n    // Sort breeds\n    return filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'origin':\n          return a.origin.localeCompare(b.origin);\n        case 'weight':\n          return parseInt(a.avgWeight.cow) - parseInt(b.avgWeight.cow);\n        case 'milk':\n          if (!a.milkProduction || !b.milkProduction) return 0;\n          return parseInt(a.milkProduction) - parseInt(b.milkProduction);\n        default:\n          return 0;\n      }\n    });\n  }, [searchQuery, selectedCategory, sortBy]);\n\n  const handleCompareBreed = (breed: BreedInfo) => {\n    setSelectedBreeds(prev => {\n      const isAlreadySelected = prev.find(b => b.id === breed.id);\n      if (isAlreadySelected) {\n        return prev.filter(b => b.id !== breed.id);\n      } else if (prev.length < 3) {\n        return [...prev, breed];\n      }\n      return prev;\n    });\n  };\n\n  const clearSelectedBreeds = () => {\n    setSelectedBreeds([]);\n  };\n\n  const clearAllFilters = () => {\n    setSearchQuery('');\n    setSelectedCategory('all');\n    setSortBy('name');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-white to-amber-50\">\n      {/* Header Section */}\n      <section className=\"py-16 bg-gradient-to-r from-green-600 to-green-700\">\n        <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n          <h1 className=\"text-4xl lg:text-6xl font-bold text-white mb-6\">\n            Cattle Breeds Explorer\n          </h1>\n          <p className=\"text-xl text-green-100 max-w-3xl mx-auto leading-relaxed\">\n            Discover detailed information about cattle breeds from around the world.\n            Compare breeds, learn about their characteristics, and find the perfect match for your needs.\n          </p>\n        </div>\n      </section>\n\n      {/* Search and Filter Section */}\n      <section className=\"py-8 bg-white border-b\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"flex flex-col lg:flex-row gap-4 items-center justify-between\">\n            {/* Search */}\n            <div className=\"relative flex-1 max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <Input\n                placeholder=\"Search breeds, origins, or characteristics...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n\n            {/* Filters */}\n            <div className=\"flex flex-wrap gap-4 items-center\">\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger className=\"w-40\">\n                  <SelectValue placeholder=\"Category\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {breedCategories.map(category => (\n                    <SelectItem key={category.id} value={category.id}>\n                      {category.name} ({category.count})\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              <Select value={sortBy} onValueChange={setSortBy}>\n                <SelectTrigger className=\"w-40\">\n                  <SelectValue placeholder=\"Sort by\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"name\">Name</SelectItem>\n                  <SelectItem value=\"origin\">Origin</SelectItem>\n                  <SelectItem value=\"weight\">Weight</SelectItem>\n                  <SelectItem value=\"milk\">Milk Production</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={() => setShowFilters(!showFilters)}\n              >\n                <Filter className=\"w-4 h-4\" />\n              </Button>\n\n              {(searchQuery || selectedCategory !== 'all' || sortBy !== 'name') && (\n                <Button variant=\"ghost\" onClick={clearAllFilters} size=\"sm\">\n                  <X className=\"w-4 h-4 mr-2\" />\n                  Clear Filters\n                </Button>\n              )}\n            </div>\n          </div>\n\n          {/* Active filters display */}\n          {(searchQuery || selectedCategory !== 'all') && (\n            <div className=\"flex flex-wrap gap-2 mt-4\">\n              {searchQuery && (\n                <Badge variant=\"secondary\">\n                  Search: {searchQuery}\n                  <X\n                    className=\"w-3 h-3 ml-2 cursor-pointer\"\n                    onClick={() => setSearchQuery('')}\n                  />\n                </Badge>\n              )}\n              {selectedCategory !== 'all' && (\n                <Badge variant=\"secondary\">\n                  Category: {breedCategories.find(c => c.id === selectedCategory)?.name}\n                  <X\n                    className=\"w-3 h-3 ml-2 cursor-pointer\"\n                    onClick={() => setSelectedCategory('all')}\n                  />\n                </Badge>\n              )}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Compare Panel */}\n      {selectedBreeds.length > 0 && (\n        <section className=\"py-4 bg-green-50 border-b\">\n          <div className=\"container mx-auto px-4 lg:px-8\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Compare className=\"w-5 h-5 text-green-600\" />\n                  <span className=\"font-medium\">\n                    Comparing {selectedBreeds.length}/3 breeds\n                  </span>\n                </div>\n                <div className=\"flex gap-2\">\n                  {selectedBreeds.map(breed => (\n                    <Badge key={breed.id} variant=\"secondary\">\n                      {breed.name}\n                      <X\n                        className=\"w-3 h-3 ml-2 cursor-pointer\"\n                        onClick={() => handleCompareBreed(breed)}\n                      />\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex gap-2\">\n                <Button size=\"sm\" asChild disabled={selectedBreeds.length < 2}>\n                  <Link href={`/breeds/compare?breeds=${selectedBreeds.map(b => b.id).join(',')}`}>\n                    Compare Now\n                  </Link>\n                </Button>\n                <Button variant=\"ghost\" size=\"sm\" onClick={clearSelectedBreeds}>\n                  Clear All\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Results Section */}\n      <section className=\"py-12\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"flex items-center justify-between mb-8\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                {filteredAndSortedBreeds.length} Breeds Found\n              </h2>\n              <p className=\"text-gray-600 mt-1\">\n                {selectedCategory !== 'all'\n                  ? `Showing ${breedCategories.find(c => c.id === selectedCategory)?.name.toLowerCase()} breeds`\n                  : 'Showing all cattle breeds'\n                }\n              </p>\n            </div>\n\n            <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n              <ArrowUpDown className=\"w-4 h-4\" />\n              Sorted by {sortBy}\n            </div>\n          </div>\n\n          {filteredAndSortedBreeds.length === 0 ? (\n            <Card className=\"text-center py-12\">\n              <CardContent>\n                <div className=\"text-6xl mb-4\">üêÑ</div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No breeds found</h3>\n                <p className=\"text-gray-600 mb-4\">\n                  Try adjusting your search criteria or clearing filters.\n                </p>\n                <Button onClick={clearAllFilters}>\n                  Clear All Filters\n                </Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n              {filteredAndSortedBreeds.map((breed) => (\n                <BreedCard\n                  key={breed.id}\n                  breed={breed}\n                  onCompare={handleCompareBreed}\n                  isSelected={selectedBreeds.some(b => b.id === breed.id)}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Category Stats */}\n      <section className=\"py-12 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 text-center mb-8\">\n            Breed Categories\n          </h2>\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-6\">\n            {breedCategories.slice(1).map((category) => (\n              <Card\n                key={category.id}\n                className={`cursor-pointer transition-all hover:shadow-lg ${\n                  selectedCategory === category.id ? 'ring-2 ring-green-500' : ''\n                }`}\n                onClick={() => setSelectedCategory(category.id)}\n              >\n                <CardHeader className=\"text-center\">\n                  <CardTitle className=\"text-lg\">{category.name}</CardTitle>\n                  <div className=\"text-3xl font-bold text-green-600\">\n                    {category.count}\n                  </div>\n                  <p className=\"text-sm text-gray-600\">breeds available</p>\n                </CardHeader>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState",
          "useState",
          "useState",
          "useMemo"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1758258938467": {
      "phoenixId": "phoenix-1758258938467",
      "componentName": "Error",
      "filePath": "src/app/error.tsx",
      "lineNumber": 5,
      "columnNumber": 15,
      "sourceCode": "export default function Error() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">500 - Server Error</h1>\n        <p className=\"text-xl mb-4\">Something went wrong. Please try again later.</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1758258938468": {
      "phoenixId": "phoenix-1758258938468",
      "componentName": "FactsPage",
      "filePath": "src/app/facts/page.tsx",
      "lineNumber": 30,
      "columnNumber": 15,
      "sourceCode": "export default function FactsPage() {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [currentFactIndex, setCurrentFactIndex] = useState(0);\n  const [animateCounters, setAnimateCounters] = useState(false);\n  const [quiz, setQuiz] = useState<QuizState>({\n    currentQuestion: 0,\n    answers: new Array(quizQuestions.length).fill(null),\n    showResults: false,\n    score: 0\n  });\n\n  const filteredFacts = selectedCategory === 'all'\n    ? cowFacts\n    : cowFacts.filter(fact => fact.category === selectedCategory);\n\n  useEffect(() => {\n    setAnimateCounters(true);\n  }, []);\n\n  const handleQuizAnswer = (answerIndex: number) => {\n    const newAnswers = [...quiz.answers];\n    newAnswers[quiz.currentQuestion] = answerIndex;\n\n    if (quiz.currentQuestion === quizQuestions.length - 1) {\n      // Calculate final score\n      const score = newAnswers.reduce((total, answer, index) => {\n        return answer === quizQuestions[index].correctAnswer ? total + 1 : total;\n      }, 0);\n\n      setQuiz({\n        ...quiz,\n        answers: newAnswers,\n        showResults: true,\n        score\n      });\n    } else {\n      setQuiz({\n        ...quiz,\n        answers: newAnswers,\n        currentQuestion: quiz.currentQuestion + 1\n      });\n    }\n  };\n\n  const resetQuiz = () => {\n    setQuiz({\n      currentQuestion: 0,\n      answers: new Array(quizQuestions.length).fill(null),\n      showResults: false,\n      score: 0\n    });\n  };\n\n  const goToPreviousQuestion = () => {\n    if (quiz.currentQuestion > 0) {\n      setQuiz(prev => ({\n        ...prev,\n        currentQuestion: prev.currentQuestion - 1\n      }));\n    }\n  };\n\n  const nextFact = () => {\n    setCurrentFactIndex((prev) => (prev + 1) % filteredFacts.length);\n  };\n\n  const previousFact = () => {\n    setCurrentFactIndex((prev) => (prev - 1 + filteredFacts.length) % filteredFacts.length);\n  };\n\n  const shareCurrentFact = () => {\n    const fact = filteredFacts[currentFactIndex];\n    if (navigator.share) {\n      navigator.share({\n        title: `Cow Fact: ${fact.title}`,\n        text: fact.description,\n        url: window.location.href\n      });\n    } else {\n      navigator.clipboard.writeText(`${fact.title}: ${fact.description}`);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-white to-amber-50\">\n      {/* Header Section */}\n      <section className=\"py-16 bg-gradient-to-r from-amber-600 to-amber-700\">\n        <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n          <h1 className=\"text-4xl lg:text-6xl font-bold text-white mb-6\">\n            Amazing Cow Facts\n          </h1>\n          <p className=\"text-xl text-amber-100 max-w-3xl mx-auto leading-relaxed\">\n            Discover fascinating facts about cows, test your knowledge with interactive quizzes,\n            and explore amazing statistics about these incredible animals.\n          </p>\n        </div>\n      </section>\n\n      {/* Statistics Section */}\n      <section className=\"py-12 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Incredible Cattle Statistics\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Mind-blowing numbers about our bovine friends\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {cowStatistics.map((stat, index) => (\n              <Card key={stat.id} className=\"cow-card text-center\">\n                <CardContent className=\"p-8\">\n                  <div className=\"text-5xl mb-4\">{stat.icon}</div>\n                  <div\n                    className={`stat-counter text-4xl lg:text-5xl font-bold mb-4 ${\n                      animateCounters ? 'animate-count-up' : ''\n                    }`}\n                    style={{ color: stat.color, animationDelay: `${index * 200}ms` }}\n                  >\n                    {stat.value.toLocaleString()}\n                  </div>\n                  <div className=\"text-lg font-medium text-gray-600 mb-2\">\n                    {stat.unit}\n                  </div>\n                  <div className=\"text-xl font-semibold text-gray-900 mb-3\">\n                    {stat.label}\n                  </div>\n                  <p className=\"text-gray-600 text-sm\">\n                    {stat.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content Tabs */}\n      <section className=\"py-12\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <Tabs defaultValue=\"facts\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2 mb-8\">\n              <TabsTrigger value=\"facts\" className=\"flex items-center gap-2\">\n                <Lightbulb className=\"w-4 h-4\" />\n                Cow Facts\n              </TabsTrigger>\n              <TabsTrigger value=\"quiz\" className=\"flex items-center gap-2\">\n                <Brain className=\"w-4 h-4\" />\n                Knowledge Quiz\n              </TabsTrigger>\n            </TabsList>\n\n            {/* Facts Tab */}\n            <TabsContent value=\"facts\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n                {/* Category Filter */}\n                <div className=\"lg:col-span-1\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Categories</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2\">\n                        {factCategories.map((category) => (\n                          <Button\n                            key={category.id}\n                            variant={selectedCategory === category.id ? \"default\" : \"ghost\"}\n                            className=\"w-full justify-start\"\n                            onClick={() => {\n                              setSelectedCategory(category.id);\n                              setCurrentFactIndex(0);\n                            }}\n                          >\n                            <span className=\"mr-2\">{category.icon}</span>\n                            {category.name}\n                          </Button>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Current Fact Display */}\n                <div className=\"lg:col-span-2\">\n                  {filteredFacts.length > 0 && (\n                    <Card className=\"cow-card\">\n                      <CardHeader className=\"text-center\">\n                        <div className=\"flex items-center justify-between\">\n                          <Badge variant=\"secondary\">\n                            {factCategories.find(c => c.id === filteredFacts[currentFactIndex]?.category)?.name}\n                          </Badge>\n                          <div className=\"flex gap-2\">\n                            <Button size=\"sm\" variant=\"ghost\" onClick={shareCurrentFact}>\n                              <Share className=\"w-4 h-4\" />\n                            </Button>\n                            <span className=\"text-sm text-gray-500\">\n                              {currentFactIndex + 1} of {filteredFacts.length}\n                            </span>\n                          </div>\n                        </div>\n                        <CardTitle className=\"text-2xl lg:text-3xl\">\n                          {filteredFacts[currentFactIndex]?.title}\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"text-center\">\n                        <div className=\"text-6xl mb-6\">\n                          {filteredFacts[currentFactIndex]?.icon}\n                        </div>\n                        <p className=\"text-lg text-gray-700 leading-relaxed mb-8\">\n                          {filteredFacts[currentFactIndex]?.description}\n                        </p>\n\n                        {filteredFacts[currentFactIndex]?.statValue && (\n                          <div className=\"bg-green-50 rounded-lg p-6 mb-6\">\n                            <div className=\"text-4xl font-bold text-green-600 mb-2\">\n                              {filteredFacts[currentFactIndex].statValue}\n                            </div>\n                            <div className=\"text-green-700 font-medium\">\n                              {filteredFacts[currentFactIndex].statUnit}\n                            </div>\n                          </div>\n                        )}\n\n                        <div className=\"flex justify-between items-center\">\n                          <Button variant=\"outline\" onClick={previousFact}>\n                            <ChevronLeft className=\"w-4 h-4 mr-2\" />\n                            Previous\n                          </Button>\n                          <Button onClick={nextFact}>\n                            Next\n                            <ChevronRight className=\"w-4 h-4 ml-2\" />\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )}\n                </div>\n              </div>\n            </TabsContent>\n\n            {/* Quiz Tab */}\n            <TabsContent value=\"quiz\">\n              <div className=\"max-w-4xl mx-auto\">\n                {!quiz.showResults ? (\n                  <Card className=\"cow-card\">\n                    <CardHeader>\n                      <div className=\"flex justify-between items-center mb-4\">\n                        <Badge variant=\"secondary\">\n                          Question {quiz.currentQuestion + 1} of {quizQuestions.length}\n                        </Badge>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={goToPreviousQuestion}\n                          disabled={quiz.currentQuestion === 0}\n                        >\n                          <ChevronLeft className=\"w-4 h-4 mr-2\" />\n                          Previous\n                        </Button>\n                      </div>\n                      <Progress\n                        value={(quiz.currentQuestion / quizQuestions.length) * 100}\n                        className=\"mb-4\"\n                      />\n                      <CardTitle className=\"text-2xl lg:text-3xl\">\n                        {quizQuestions[quiz.currentQuestion]?.question}\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {quizQuestions[quiz.currentQuestion]?.options.map((option, index) => (\n                          <Button\n                            key={index}\n                            variant=\"outline\"\n                            className=\"h-auto p-6 text-left justify-start hover:bg-green-50\"\n                            onClick={() => handleQuizAnswer(index)}\n                          >\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center font-semibold\">\n                                {String.fromCharCode(65 + index)}\n                              </div>\n                              {option}\n                            </div>\n                          </Button>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ) : (\n                  <Card className=\"cow-card text-center\">\n                    <CardHeader>\n                      <div className=\"text-6xl mb-4\">\n                        {quiz.score >= quizQuestions.length * 0.8 ? 'üèÜ' : quiz.score >= quizQuestions.length * 0.6 ? 'üéâ' : 'üìö'}\n                      </div>\n                      <CardTitle className=\"text-3xl\">\n                        {quiz.score >= quizQuestions.length * 0.8\n                          ? 'Excellent! You\\'re a cow expert!'\n                          : quiz.score >= quizQuestions.length * 0.6\n                          ? 'Good job! You know your cows!'\n                          : 'Keep learning about these amazing animals!'\n                        }\n                      </CardTitle>\n                      <div className=\"text-2xl font-bold text-green-600 mt-4\">\n                        {quiz.score} out of {quizQuestions.length} correct\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4 mb-8\">\n                        {quizQuestions.map((question, index) => (\n                          <div\n                            key={index}\n                            className={`p-4 rounded-lg border-2 ${\n                              quiz.answers[index] === question.correctAnswer\n                                ? 'border-green-200 bg-green-50'\n                                : 'border-red-200 bg-red-50'\n                            }`}\n                          >\n                            <div className=\"flex items-start gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                {quiz.answers[index] === question.correctAnswer ? (\n                                  <CheckCircle className=\"w-6 h-6 text-green-600\" />\n                                ) : (\n                                  <XCircle className=\"w-6 h-6 text-red-600\" />\n                                )}\n                              </div>\n                              <div className=\"text-left\">\n                                <div className=\"font-semibold mb-2\">\n                                  Q{index + 1}: {question.question}\n                                </div>\n                                <div className=\"text-sm text-gray-600\">\n                                  <strong>Correct Answer:</strong> {question.options[question.correctAnswer]}\n                                </div>\n                                <div className=\"text-sm text-gray-700 mt-1\">\n                                  {question.explanation}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      <Button onClick={resetQuiz} size=\"lg\">\n                        <RotateCcw className=\"w-5 h-5 mr-2\" />\n                        Take Quiz Again\n                      </Button>\n                    </CardContent>\n                  </Card>\n                )}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management",
        "side-effects",
        "lifecycle-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState",
          "useState",
          "useState",
          "useState",
          "useEffect"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1758258938469": {
      "phoenixId": "phoenix-1758258938469",
      "componentName": "GlobalError",
      "filePath": "src/app/global-error.tsx",
      "lineNumber": 4,
      "columnNumber": 15,
      "sourceCode": "export default function GlobalError({\n  error,\n  reset,\n}: {\n  error: Error & { digest?: string }\n  reset: () => void\n}) {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-8 font-sans\">\n      <div className=\"text-center max-w-md\">\n        <h1 className=\"text-2xl font-bold mb-4 text-red-600\">\n          Something went wrong!\n        </h1>\n        <p className=\"text-lg mb-8 text-gray-600\">\n          The application encountered an unexpected error. This is likely temporary.\n        </p>\n        <div className=\"flex gap-4 justify-center flex-wrap\">\n          <button\n            onClick={reset}\n            className=\"px-6 py-3 bg-blue-500 text-white border-0 rounded-lg cursor-pointer text-base hover:bg-blue-600\"\n          >\n            Try Again\n          </button>\n          <button\n            onClick={() => window.location.href = '/'}\n            className=\"px-6 py-3 bg-gray-500 text-white border-0 rounded-lg cursor-pointer text-base hover:bg-gray-600\"\n          >\n            Go Home\n          </button>\n        </div>\n        {process.env.NODE_ENV === 'development' && (\n          <details className=\"mt-8 text-left\">\n            <summary className=\"cursor-pointer font-bold\">\n              Error Details (Development Only)\n            </summary>\n            <pre className=\"mt-4 p-4 bg-gray-100 rounded-lg text-sm overflow-auto\">\n              {error.message}\n              {error.stack && '\\n\\nStack trace:\\n' + error.stack}\n            </pre>\n          </details>\n        )}\n      </div>\n    </div>\n  )\n}",
      "props": [
        {
          "name": "error",
          "type": "unknown",
          "required": false
        },
        {
          "name": "reset",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1758258938470": {
      "phoenixId": "phoenix-1758258938470",
      "componentName": "RootLayout",
      "filePath": "src/app/layout.tsx",
      "lineNumber": 27,
      "columnNumber": 15,
      "sourceCode": "export default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <QueryProvider>\n          <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"system\"\n            enableSystem\n            disableTransitionOnChange\n          >\n            <TooltipProvider>\n              <Header />\n              {children}\n              <Footer />\n              <Toaster />\n              <Sonner />\n            </TooltipProvider>\n          </ThemeProvider>\n        </QueryProvider>\n      </body>\n    </html>\n  );\n}",
      "props": [
        {
          "name": "children",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1758258938471": {
      "phoenixId": "phoenix-1758258938471",
      "componentName": "Loading",
      "filePath": "src/app/loading.tsx",
      "lineNumber": 1,
      "columnNumber": 15,
      "sourceCode": "export default function Loading() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <p className=\"text-xl\">Loading...</p>\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1758258938472": {
      "phoenixId": "phoenix-1758258938472",
      "componentName": "NotFound",
      "filePath": "src/app/not-found.tsx",
      "lineNumber": 3,
      "columnNumber": 15,
      "sourceCode": "export default function NotFound() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404 - Page Not Found</h1>\n        <p className=\"text-xl mb-4\">The page you are looking for does not exist.</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1758258938473": {
      "phoenixId": "phoenix-1758258938473",
      "componentName": "HomePage",
      "filePath": "src/app/page.tsx",
      "lineNumber": 12,
      "columnNumber": 15,
      "sourceCode": "export default function HomePage() {\n  const featuredBreeds = cowBreeds.slice(0, 3);\n  const topStats = cowStatistics.slice(0, 4);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"container mx-auto px-4 lg:px-8 py-8\">\n        <HeroCarousel />\n      </section>\n\n      {/* Welcome Section */}\n      <section className=\"py-16 bg-gradient-to-b from-amber-50 to-white\">\n        <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n          <h2 className=\"text-4xl lg:text-5xl font-bold text-gray-900 mb-6\">\n            Discover the World of <span className=\"text-green-600\">Cattle</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-12 leading-relaxed\">\n            Welcome to Pasture Perfect, your comprehensive guide to cattle breeds worldwide.\n            Explore fascinating facts, learn about different breeds, and discover the amazing world of these magnificent animals.\n          </p>\n\n          {/* Quick Stats */}\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n            {topStats.map((stat, index) => (\n              <Card key={stat.id} className=\"cow-card text-center\">\n                <CardContent className=\"p-6\">\n                  <div className=\"text-3xl mb-2\">{stat.icon}</div>\n                  <div className=\"stat-counter text-3xl lg:text-4xl font-bold mb-2\" style={{ color: stat.color }}>\n                    {stat.value.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-500 mb-1\">{stat.unit}</div>\n                  <div className=\"text-sm font-medium text-gray-700\">{stat.label}</div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" asChild className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white px-8 py-4\">\n              <Link href=\"/breeds\">\n                Explore Breeds <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Link>\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" asChild className=\"px-8 py-4\">\n              <Link href=\"/facts\">\n                Amazing Facts\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Breeds */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 mb-4\">\n              Featured Breeds\n            </h2>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              Discover some of the most popular and distinctive cattle breeds from around the world.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n            {featuredBreeds.map((breed) => (\n              <BreedCard key={breed.id} breed={breed} />\n            ))}\n          </div>\n\n          <div className=\"text-center\">\n            <Button size=\"lg\" variant=\"outline\" asChild>\n              <Link href=\"/breeds\">\n                View All Breeds <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-gradient-to-b from-white to-amber-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 mb-4\">\n              Why Choose Pasture Perfect?\n            </h2>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              Your ultimate resource for cattle breed information, facts, and education.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Globe className=\"w-8 h-8 text-green-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Global Coverage</h3>\n              <p className=\"text-gray-600\">\n                Comprehensive information on cattle breeds from every continent.\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Award className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Expert Content</h3>\n              <p className=\"text-gray-600\">\n                Carefully researched and verified information by cattle experts.\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <TrendingUp className=\"w-8 h-8 text-purple-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Interactive Tools</h3>\n              <p className=\"text-gray-600\">\n                Compare breeds, take quizzes, and explore interactive features.\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-amber-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Users className=\"w-8 h-8 text-amber-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Community</h3>\n              <p className=\"text-gray-600\">\n                Join a community of farmers, researchers, and cattle enthusiasts.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-gradient-to-r from-green-600 to-green-700\">\n        <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold text-white mb-6\">\n            Ready to Explore the World of Cattle?\n          </h2>\n          <p className=\"text-xl text-green-100 max-w-2xl mx-auto mb-8\">\n            Start your journey into the fascinating world of cattle breeds, facts, and farming knowledge.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-green-700 hover:bg-gray-100 px-8 py-4\">\n              <Link href=\"/breeds\">Start Exploring</Link>\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-green-700 px-8 py-4\">\n              <Link href=\"/facts\">Learn Facts</Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1758258938474": {
      "phoenixId": "phoenix-1758258938474",
      "componentName": "BreedCard",
      "filePath": "src/components/breed-card.tsx",
      "lineNumber": 17,
      "columnNumber": 7,
      "sourceCode": "export function BreedCard({ breed, onCompare, isSelected = false }: BreedCardProps) {\n  const [imageError, setImageError] = useState(false);\n\n  const getPrimaryUseColor = (use: string) => {\n    switch (use) {\n      case 'Dairy':\n        return 'hsl(var(--sky-blue))';\n      case 'Beef':\n        return 'hsl(var(--barn-red))';\n      case 'Dual-Purpose':\n        return 'hsl(var(--grass-green))';\n      default:\n        return 'hsl(var(--cow-brown))';\n    }\n  };\n\n  return (\n    <Card\n      className={`cow-card group overflow-hidden transition-all duration-300 ${\n        isSelected ? 'ring-2 ring-green-500 ring-opacity-50' : ''\n      }`}\n    >\n      <div className=\"relative aspect-[4/3] overflow-hidden\">\n        {!imageError ? (\n          <Image\n            src={breed.image}\n            alt={breed.name}\n            fill\n            className=\"object-cover group-hover:scale-105 transition-transform duration-300\"\n            onError={() => setImageError(true)}\n          />\n        ) : (\n          <div className=\"w-full h-full bg-gradient-to-br from-amber-100 to-amber-200 flex items-center justify-center\">\n            <div className=\"text-6xl opacity-50\">üêÑ</div>\n          </div>\n        )}\n\n        {/* Origin badge */}\n        <div className=\"absolute top-3 left-3\">\n          <Badge variant=\"secondary\" className=\"bg-white/90 text-gray-800 backdrop-blur-sm\">\n            <MapPin className=\"w-3 h-3 mr-1\" />\n            {breed.origin}\n          </Badge>\n        </div>\n\n        {/* Primary use badge */}\n        <div className=\"absolute top-3 right-3\">\n          <Badge\n            className=\"text-white backdrop-blur-sm\"\n            style={{ backgroundColor: getPrimaryUseColor(breed.primaryUse) }}\n          >\n            {breed.primaryUse}\n          </Badge>\n        </div>\n\n        {/* Compare button */}\n        {onCompare && (\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className={`absolute bottom-3 right-3 bg-white/90 backdrop-blur-sm transition-all ${\n              isSelected\n                ? 'bg-green-100 border-green-500 text-green-700'\n                : 'hover:bg-white'\n            }`}\n            onClick={(e) => {\n              e.preventDefault();\n              onCompare(breed);\n            }}\n          >\n            {isSelected ? (\n              <>\n                <Heart className=\"w-4 h-4 mr-2 fill-current\" />\n                Added\n              </>\n            ) : (\n              <>\n                <Heart className=\"w-4 h-4 mr-2\" />\n                Compare\n              </>\n            )}\n          </Button>\n        )}\n      </div>\n\n      <CardContent className=\"p-6\">\n        <div className=\"mb-4\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">{breed.name}</h3>\n          <p className=\"text-gray-600 leading-relaxed line-clamp-3\">\n            {breed.description}\n          </p>\n        </div>\n\n        <div className=\"space-y-3 mb-6\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-sm font-medium text-gray-500\">Average Weight</span>\n            <span className=\"text-sm font-semibold text-gray-900\">{breed.avgWeight.cow}</span>\n          </div>\n\n          {breed.milkProduction && (\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm font-medium text-gray-500\">Milk Production</span>\n              <span className=\"text-sm font-semibold text-gray-900\">{breed.milkProduction}</span>\n            </div>\n          )}\n\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-sm font-medium text-gray-500\">Temperament</span>\n            <span className=\"text-sm font-semibold text-gray-900\">{breed.temperament}</span>\n          </div>\n\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-sm font-medium text-gray-500\">Horn Type</span>\n            <span className=\"text-sm font-semibold text-gray-900\">{breed.hornType}</span>\n          </div>\n        </div>\n\n        {/* Characteristics tags */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {breed.characteristics.slice(0, 3).map((characteristic, index) => (\n            <span\n              key={index}\n              className=\"breed-tag\"\n            >\n              {characteristic}\n            </span>\n          ))}\n          {breed.characteristics.length > 3 && (\n            <span className=\"breed-tag bg-gray-200 text-gray-700\">\n              +{breed.characteristics.length - 3}\n            </span>\n          )}\n        </div>\n\n        <Button className=\"w-full bg-gradient-to-r from-amber-600 to-amber-700 hover:from-amber-700 hover:to-amber-800 text-white font-semibold\">\n          <Info className=\"w-4 h-4 mr-2\" />\n          Learn More\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}",
      "props": [
        {
          "name": "breed",
          "type": "unknown",
          "required": false
        },
        {
          "name": "onCompare",
          "type": "unknown",
          "required": false
        },
        {
          "name": "isSelected",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1758258938475": {
      "phoenixId": "phoenix-1758258938475",
      "componentName": "Footer",
      "filePath": "src/components/footer.tsx",
      "lineNumber": 4,
      "columnNumber": 7,
      "sourceCode": "export function Footer() {\n  return (\n    <footer className=\"bg-gradient-to-r from-green-800 to-green-900 text-white\">\n      <div className=\"container mx-auto px-4 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Brand Section */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <div className=\"text-2xl\">üêÑ</div>\n              <div>\n                <span className=\"text-xl font-bold\">Pasture</span>\n                <span className=\"text-xl font-bold text-green-300\">Perfect</span>\n              </div>\n            </div>\n            <p className=\"text-green-100 mb-4 leading-relaxed\">\n              Your comprehensive guide to cattle breeds worldwide.\n              Discover fascinating facts and educational resources about these magnificent animals.\n            </p>\n            <div className=\"flex items-center gap-2 text-green-200\">\n              <Heart className=\"w-4 h-4\" />\n              <span className=\"text-sm\">Made with love for cattle enthusiasts</span>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Explore</h3>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/breeds\" className=\"text-green-200 hover:text-white transition-colors\">\n                  All Breeds\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/breeds?category=dairy\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Dairy Breeds\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/breeds?category=beef\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Beef Breeds\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/breeds/compare\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Compare Breeds\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/facts\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Amazing Facts\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Learn More */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Learn</h3>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/facts\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Cow Facts\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/facts#quiz\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Knowledge Quiz\n                </Link>\n              </li>\n              <li>\n                <a href=\"#statistics\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Statistics\n                </a>\n              </li>\n              <li>\n                <a href=\"#breeds\" className=\"text-green-200 hover:text-white transition-colors\">\n                  Breed Database\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Contact & Community */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Connect</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-center gap-2\">\n                <Mail className=\"w-4 h-4 text-green-300\" />\n                <span className=\"text-green-200 text-sm\">info@pastureperfect.com</span>\n              </li>\n              <li className=\"flex items-center gap-2\">\n                <Globe className=\"w-4 h-4 text-green-300\" />\n                <span className=\"text-green-200 text-sm\">Global Community</span>\n              </li>\n              <li className=\"flex items-center gap-2\">\n                <Users className=\"w-4 h-4 text-green-300\" />\n                <span className=\"text-green-200 text-sm\">Join 10,000+ Members</span>\n              </li>\n            </ul>\n\n            <div className=\"mt-6\">\n              <h4 className=\"font-semibold mb-2\">Follow Our Updates</h4>\n              <div className=\"flex gap-3\">\n                <div className=\"w-8 h-8 bg-green-700 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors cursor-pointer\">\n                  <span className=\"text-xs\">üìò</span>\n                </div>\n                <div className=\"w-8 h-8 bg-green-700 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors cursor-pointer\">\n                  <span className=\"text-xs\">üê¶</span>\n                </div>\n                <div className=\"w-8 h-8 bg-green-700 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors cursor-pointer\">\n                  <span className=\"text-xs\">üì∏</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Section */}\n        <div className=\"border-t border-green-700 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n            <div className=\"text-green-200 text-sm\">\n              ¬© 2024 Pasture Perfect. All rights reserved. Educational content for cattle enthusiasts worldwide.\n            </div>\n            <div className=\"flex gap-6 text-sm\">\n              <a href=\"#privacy\" className=\"text-green-200 hover:text-white transition-colors\">\n                Privacy Policy\n              </a>\n              <a href=\"#terms\" className=\"text-green-200 hover:text-white transition-colors\">\n                Terms of Use\n              </a>\n              <a href=\"#accessibility\" className=\"text-green-200 hover:text-white transition-colors\">\n                Accessibility\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1758258938476": {
      "phoenixId": "phoenix-1758258938476",
      "componentName": "Header",
      "filePath": "src/components/header.tsx",
      "lineNumber": 45,
      "columnNumber": 7,
      "sourceCode": "export function Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200\">\n      <nav className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\n              <div className=\"text-2xl\">üêÑ</div>\n              <div>\n                <span className=\"text-xl font-bold text-gray-900\">Pasture</span>\n                <span className=\"text-xl font-bold text-green-600\">Perfect</span>\n              </div>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:block\">\n            <NavigationMenu>\n              <NavigationMenuList className=\"space-x-2\">\n                {navigation.map((item) => (\n                  <NavigationMenuItem key={item.name}>\n                    {item.submenu ? (\n                      <>\n                        <NavigationMenuTrigger className=\"font-medium text-gray-700 hover:text-green-600 transition-colors\">\n                          {item.name}\n                        </NavigationMenuTrigger>\n                        <NavigationMenuContent>\n                          <div className=\"w-80 p-6\">\n                            <div className=\"mb-4\">\n                              <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">{item.name}</h4>\n                              <p className=\"text-sm text-gray-600\">{item.description}</p>\n                            </div>\n                            <ul className=\"space-y-3\">\n                              {item.submenu.map((subItem) => (\n                                <li key={subItem.name}>\n                                  <NavigationMenuLink asChild>\n                                    <Link\n                                      href={subItem.href}\n                                      className=\"block p-3 rounded-lg hover:bg-gray-50 transition-colors\"\n                                    >\n                                      <div className=\"font-medium text-gray-900 mb-1\">\n                                        {subItem.name}\n                                      </div>\n                                      <div className=\"text-sm text-gray-600\">\n                                        {subItem.description}\n                                      </div>\n                                    </Link>\n                                  </NavigationMenuLink>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        </NavigationMenuContent>\n                      </>\n                    ) : (\n                      <NavigationMenuLink asChild>\n                        <Link\n                          href={item.href}\n                          className=\"font-medium text-gray-700 hover:text-green-600 transition-colors px-3 py-2 rounded-md\"\n                        >\n                          {item.name}\n                        </Link>\n                      </NavigationMenuLink>\n                    )}\n                  </NavigationMenuItem>\n                ))}\n              </NavigationMenuList>\n            </NavigationMenu>\n          </div>\n\n          {/* Search and CTA */}\n          <div className=\"hidden lg:flex items-center space-x-4\">\n            <Button variant=\"ghost\" size=\"icon\">\n              <Search className=\"h-5 w-5\" />\n            </Button>\n            <Button className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white\">\n              Learn More\n            </Button>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"lg:hidden\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n            >\n              {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </Button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMenuOpen && (\n          <div className=\"lg:hidden border-t border-gray-200 py-4\">\n            <div className=\"space-y-4\">\n              {navigation.map((item) => (\n                <div key={item.name} className=\"space-y-2\">\n                  <Link\n                    href={item.href}\n                    className=\"block font-medium text-gray-700 hover:text-green-600 transition-colors\"\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    {item.name}\n                  </Link>\n                  {item.submenu && (\n                    <div className=\"ml-4 space-y-2\">\n                      {item.submenu.map((subItem) => (\n                        <Link\n                          key={subItem.name}\n                          href={subItem.href}\n                          className=\"block text-sm text-gray-600 hover:text-green-600 transition-colors\"\n                          onClick={() => setIsMenuOpen(false)}\n                        >\n                          {subItem.name}\n                        </Link>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n              <div className=\"pt-4 border-t border-gray-200\">\n                <Button className=\"w-full bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white\">\n                  Learn More\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1758258938477": {
      "phoenixId": "phoenix-1758258938477",
      "componentName": "HeroCarousel",
      "filePath": "src/components/hero-carousel.tsx",
      "lineNumber": 40,
      "columnNumber": 7,
      "sourceCode": "export function HeroCarousel() {\n  const [emblaRef, emblaApi] = useEmblaCarousel({\n    loop: true,\n    duration: 30\n  });\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  const scrollPrev = useCallback(() => emblaApi?.scrollPrev(), [emblaApi]);\n  const scrollNext = useCallback(() => emblaApi?.scrollNext(), [emblaApi]);\n\n  const onSelect = useCallback(() => {\n    if (!emblaApi) return;\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n  }, [emblaApi]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    emblaApi.on('select', onSelect);\n    onSelect();\n\n    let autoplayInterval: NodeJS.Timeout;\n\n    if (isPlaying) {\n      autoplayInterval = setInterval(() => {\n        emblaApi.scrollNext();\n      }, 5000);\n    }\n\n    return () => {\n      if (autoplayInterval) clearInterval(autoplayInterval);\n      emblaApi.off('select', onSelect);\n    };\n  }, [emblaApi, onSelect, isPlaying]);\n\n  return (\n    <div className=\"relative w-full h-[70vh] min-h-[500px] overflow-hidden rounded-xl bg-gradient-to-br from-amber-50 to-green-50\">\n      <div className=\"embla h-full\" ref={emblaRef}>\n        <div className=\"embla__container flex h-full\">\n          {heroSlides.map((slide) => (\n            <div key={slide.id} className=\"embla__slide relative min-w-0 flex-[0_0_100%] h-full\">\n              <div className=\"relative w-full h-full\">\n                <Image\n                  src={slide.image}\n                  alt={slide.title}\n                  fill\n                  className=\"object-cover\"\n                  priority={slide.id === 1}\n                />\n\n                {/* Overlay for text readability */}\n                <div className=\"absolute inset-0 bg-gradient-to-r from-black/60 via-black/30 to-transparent\" />\n\n                {/* Content */}\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"container mx-auto px-4 lg:px-8\">\n                    <div className=\"max-w-2xl text-white animate-fade-in-up\">\n                      <div className=\"mb-4\">\n                        <span className=\"inline-block px-4 py-2 bg-white/20 backdrop-blur-sm rounded-full text-sm font-medium mb-4\">\n                          {slide.subtitle}\n                        </span>\n                      </div>\n                      <h1 className=\"text-5xl lg:text-7xl font-bold mb-6 leading-tight\">\n                        {slide.title}\n                      </h1>\n                      <p className=\"text-xl lg:text-2xl mb-8 leading-relaxed opacity-90\">\n                        {slide.description}\n                      </p>\n                      <div className=\"flex flex-col sm:flex-row gap-4\">\n                        <Button\n                          size=\"lg\"\n                          className=\"bg-white text-gray-900 hover:bg-gray-100 font-semibold px-8 py-4 text-lg\"\n                          asChild\n                        >\n                          <Link href={slide.link}>\n                            {slide.cta}\n                          </Link>\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"lg\"\n                          className=\"border-white text-white hover:bg-white hover:text-gray-900 px-8 py-4 text-lg\"\n                          asChild\n                        >\n                          <Link href=\"/breeds\">\n                            View All Breeds\n                          </Link>\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation Arrows */}\n      <Button\n        variant=\"outline\"\n        size=\"icon\"\n        className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white hover:text-gray-900 transition-all z-10\"\n        onClick={scrollPrev}\n        aria-label=\"Previous slide\"\n      >\n        <ChevronLeft className=\"h-6 w-6\" />\n      </Button>\n\n      <Button\n        variant=\"outline\"\n        size=\"icon\"\n        className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white hover:text-gray-900 transition-all z-10\"\n        onClick={scrollNext}\n        aria-label=\"Next slide\"\n      >\n        <ChevronRight className=\"h-6 w-6\" />\n      </Button>\n\n      {/* Play/Pause button */}\n      <Button\n        variant=\"outline\"\n        size=\"icon\"\n        className=\"absolute top-4 right-4 bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white hover:text-gray-900 transition-all z-10\"\n        onClick={() => setIsPlaying(!isPlaying)}\n        aria-label={isPlaying ? 'Pause slideshow' : 'Play slideshow'}\n      >\n        <Play className={`h-4 w-4 ${isPlaying ? 'opacity-100' : 'opacity-50'}`} />\n      </Button>\n\n      {/* Dot indicators */}\n      <div className=\"absolute bottom-6 left-1/2 -translate-x-1/2 flex space-x-2 z-10\">\n        {heroSlides.map((_, index) => (\n          <button\n            key={index}\n            className={`w-3 h-3 rounded-full transition-all ${\n              index === selectedIndex\n                ? 'bg-white scale-110'\n                : 'bg-white/50 hover:bg-white/75'\n            }`}\n            onClick={() => emblaApi?.scrollTo(index)}\n            aria-label={`Go to slide ${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly",
        "state-management",
        "side-effects",
        "lifecycle-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useEmblaCarousel",
          "useState",
          "useState",
          "useCallback",
          "useCallback",
          "useCallback",
          "useEffect"
        ],
        "complexity": "complex"
      }
    },
    "phoenix-1758258938478": {
      "phoenixId": "phoenix-1758258938478",
      "componentName": "QueryProvider",
      "filePath": "src/components/query-provider.tsx",
      "lineNumber": 6,
      "columnNumber": 7,
      "sourceCode": "export function QueryProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(() => new QueryClient())\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  )\n}",
      "props": [
        {
          "name": "children",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "state-management"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useState"
        ],
        "complexity": "moderate"
      }
    },
    "phoenix-1758258938479": {
      "phoenixId": "phoenix-1758258938479",
      "componentName": "ThemeProvider",
      "filePath": "src/components/theme-provider.tsx",
      "lineNumber": 6,
      "columnNumber": 7,
      "sourceCode": "export function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}",
      "props": [
        {
          "name": "children",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "simple"
      }
    },
    "phoenix-1758258938480": {
      "phoenixId": "phoenix-1758258938480",
      "componentName": "Badge",
      "filePath": "src/components/ui/badge.tsx",
      "lineNumber": 30,
      "columnNumber": 0,
      "sourceCode": "function Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}",
      "props": [
        {
          "name": "className",
          "type": "unknown",
          "required": false
        },
        {
          "name": "variant",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "moderate"
      }
    },
    "phoenix-1758258938481": {
      "phoenixId": "phoenix-1758258938481",
      "componentName": "Calendar",
      "filePath": "src/components/ui/calendar.tsx",
      "lineNumber": 10,
      "columnNumber": 0,
      "sourceCode": "function Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        Chevron: (props) => props.orientation === 'left' ? <ChevronLeft className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}",
      "props": [
        {
          "name": "className",
          "type": "unknown",
          "required": false
        },
        {
          "name": "classNames",
          "type": "unknown",
          "required": false
        },
        {
          "name": "showOutsideDays",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change",
        "careful-modification",
        "test-thoroughly"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "complex"
      }
    },
    "phoenix-1758258938482": {
      "phoenixId": "phoenix-1758258938482",
      "componentName": "Skeleton",
      "filePath": "src/components/ui/skeleton.tsx",
      "lineNumber": 3,
      "columnNumber": 0,
      "sourceCode": "function Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}",
      "props": [
        {
          "name": "className",
          "type": "unknown",
          "required": false
        }
      ],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "complexity": "simple"
      }
    },
    "phoenix-1758258938483": {
      "phoenixId": "phoenix-1758258938483",
      "componentName": "Toaster",
      "filePath": "src/components/ui/toaster.tsx",
      "lineNumber": 13,
      "columnNumber": 7,
      "sourceCode": "export function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}",
      "props": [],
      "imports": [],
      "modificationHints": [
        "text-update",
        "style-change"
      ],
      "astAnalysis": {
        "componentType": "functional",
        "hooks": [
          "useToast"
        ],
        "complexity": "moderate"
      }
    }
  },
  "stats": {
    "totalComponents": 19,
    "totalFiles": 71,
    "processingTimeMs": 1543
  }
}
